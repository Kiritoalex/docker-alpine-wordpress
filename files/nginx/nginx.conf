# run nginx in foreground
daemon off;

error_log /data/logs/nginx/nginx-error.log warn;
pid /var/run/nginx.pid;
env DB_HOST;
env DB_NAME;
env DB_USER;
env DB_PASS;
env DB_PASSWORD;

worker_processes  auto;
events {
    worker_connections  4096;
}

http {
  sendfile on;
  include    /etc/nginx/mime.types;
  include    /etc/nginx/fastcgi.conf;
  default_type application/octet-stream;
  tcp_nopush   on;
  client_body_temp_path /tmp/nginx/body 1 2;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;
  
  #a new log format for detecting bad bots.
  log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';
  
  
  ## This log format makes it so we can see real requester's IP address \
  ##    not just the reverse proxy server's IP address. Also note, that \
  ##    "specialLog" can be replaced with any name you would like to \
  ##    give to this log format.
  log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';  
  
  client_max_body_size 2G;
  
  server {

    #listen       [::]:80; #uncomment for IPv6 support
    listen       80;
    
    root /data/code/htdocs;
    index  index.php index.html index.htm;
    access_log /data/logs/nginx/access.log specialLog;
    error_log /data/logs/nginx/error.log;
    
    disable_symlinks off;
    
    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }
    
    # deny dot-files
    location ~ /\. { 
      deny all;
      access_log off;
      log_not_found off; 
    }

    # Asset expirations and such
    include assets.conf;
    
    # Include custom nginx additions from project
    include /data/code/nginx/*.conf;

    # A few wordpress specific rules for subdirectory installations
    include wordpress.conf;

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      if (!-f $document_root$fastcgi_script_name) {
        return 404;
      }
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }

    # Include Rules which deny using hacks and accessing important files
    include security.conf;
    
  }
  
}