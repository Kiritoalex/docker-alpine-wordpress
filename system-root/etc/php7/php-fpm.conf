error_log = /data/log/php-fpm/php-fpm.log 
log_level = warning

; Run this in foregroud so s6 can control it
daemonize = no

[www]
user = nginx
group = www-data
listen = 127.0.0.1:9000
listen.owner = nginx
listen.group = www-data
pm = ondemand

; Total RAM dedicated to the web server / Max child process size
pm.max_children = 75

; Project web root
chdir = /data/code/web/

pm.process_idle_timeout = 10s
pm.max_requests = 500

php_flag[display_errors] = off
php_admin_value[memory_limit] = 128M
php_admin_value[upload_max_filesize] = 2G
php_admin_value[post_max_size] = 2G
php_admin_value[always_populate_raw_post_data] = -1
php_admin_value[output_buffering] = 0
php_admin_value[max_input_time] = 3600
php_admin_value[max_execution_time] = 3600
php_admin_value[openssl.cafile] = /etc/ssl/certs/ca-certificates.crt
php_admin_value[openssl.capath] = /etc/ssl/certs
php_admin_value[max_input_nesting_level] = 256
php_admin_value[max_input_vars] = 10000

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
; Default Value: no
catch_workers_output = yes

; Database variables passed via -e argument on Docker
env["DB_NAME"] = "$DB_NAME"
env["DB_HOST"] = "$DB_HOST"
env["DB_USER"] = "$DB_USER"
env["DB_PASSWORD"] = "$DB_PASSWORD"

; Use both ENV versions of password just in case someone decides to use shorter version
env["DB_PASS"] = "$DB_PASS"

; Auto configured variables from docker for using linked mariadb container in local development
env["DB_PORT_3306_TCP_ADDR"] = "$DB_PORT_3306_TCP_ADDR"
env["DB_ENV_MYSQL_PASSWORD"] = "DB_ENV_MYSQL_PASSWORD"
env["DB_ENV_MYSQL_USER"] = "DB_ENV_MYSQL_USER"
env["DB_ENV_MYSQL_PASSWORD"] = "DB_ENV_MYSQL_PASSWORD"

; WP siteurl and home
env["WP_SITEURL"] = "$WP_SITEURL"
env["WP_HOME"] = "$WP_HOME"

; Environment so users can disable some features in dev
env["WP_ENV"] = "$WP_ENV"

; Use http://phinx.org for database migrations
env["PHINX_ENVIRONMENT"] = "$WP_ENV"

; WP Salts
env["AUTH_KEY"] = "$AUTH_KEY"
env["SECURE_AUTH_KEY"] = "$SECURE_AUTH_KEY"
env["LOGGED_IN_KEY"] = "$LOGGED_IN_KEY"
env["NONCE_KEY"] = "$NONCE_KEY"
env["AUTH_SALT"] = "$AUTH_SALT"
env["SECURE_AUTH_SALT"] = "$SECURE_AUTH_SALT"
env["LOGGED_IN_SALT"] = "$LOGGED_IN_SALT"

; Really useful wp plugin if you don't have SSL in the main site: https://github.com/Seravo/wp-https-domain-alias
env["HTTPS_DOMAIN_ALIAS"] = "$HTTPS_DOMAIN_ALIAS"

; Redis
env["REDIS_HOST"] = "$REDIS_HOST"
env["REDIS_PORT"] = "$REDIS_PORT"